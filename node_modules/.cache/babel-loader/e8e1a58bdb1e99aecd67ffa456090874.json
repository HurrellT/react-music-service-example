{"ast":null,"code":"var _jsxFileName = \"/home/hurrellt/git/react-music-service-example/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport albums from './albums.json';\nimport './App.css';\nimport SongCard from './components/molecules/SongCard';\nimport LoginForm from './components/organisms/LoginForm';\nimport NavBar from './components/organisms/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst sleep = milliseconds => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n};\n\nconst App = () => {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState('');\n\n  const onChangeSearch = e => setSearch(e.target.value);\n\n  useEffect(() => {\n    const fetch = async () => {\n      if (loggedIn) {\n        setLoading(true); //simulando una carga\n\n        await sleep(2000);\n        setSongs(albums);\n        setLoading(false);\n      }\n    };\n\n    fetch();\n  }, [loggedIn]);\n  useEffect(() => {\n    const fetch = async () => {\n      if (loggedIn && search !== '') {\n        setLoading(true); //simulando una carga\n\n        await sleep(2000);\n        setSongs(albums.filter(song => song.title.toLowerCase().includes(search)));\n        setLoading(false);\n      } else {\n        setSongs(albums);\n      }\n    };\n\n    fetch();\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      search: search,\n      onChangeSearch: onChangeSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-5 mb-5\",\n        children: \"Welcome to Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), !loggedIn ? /*#__PURE__*/_jsxDEV(LoginForm, {\n        setLoggedIn: setLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(SongCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"z/Z7yr+F2jK6Z6Zu4LosmZBJTv8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/hurrellt/git/react-music-service-example/src/App.js"],"names":["useEffect","useState","albums","SongCard","LoginForm","NavBar","sleep","milliseconds","Promise","resolve","setTimeout","App","loggedIn","setLoggedIn","songs","setSongs","loading","setLoading","search","setSearch","onChangeSearch","e","target","value","fetch","filter","song","title","toLowerCase","includes"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;;;AAEA,MAAMC,KAAK,GAAIC,YAAD,IAAkB;AAC9B,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,YAAV,CAAjC,CAAP;AACD,CAFD;;AAIA,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMmB,cAAc,GAAIC,CAAD,IAAOF,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvC;;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,KAAK,GAAG,YAAY;AACxB,UAAIZ,QAAJ,EAAc;AACZK,QAAAA,UAAU,CAAC,IAAD,CAAV,CADY,CAEZ;;AACA,cAAMX,KAAK,CAAC,IAAD,CAAX;AACAS,QAAAA,QAAQ,CAACb,MAAD,CAAR;AACAe,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KARD;;AASAO,IAAAA,KAAK;AACN,GAXQ,EAWN,CAACZ,QAAD,CAXM,CAAT;AAaAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,KAAK,GAAG,YAAY;AACxB,UAAIZ,QAAQ,IAAIM,MAAM,KAAK,EAA3B,EAA+B;AAC7BD,QAAAA,UAAU,CAAC,IAAD,CAAV,CAD6B,CAE7B;;AACA,cAAMX,KAAK,CAAC,IAAD,CAAX;AACAS,QAAAA,QAAQ,CAACb,MAAM,CAACuB,MAAP,CAAcC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCX,MAAlC,CAAtB,CAAD,CAAR;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAND,MAMO;AACLF,QAAAA,QAAQ,CAACb,MAAD,CAAR;AACD;AACF,KAVD;;AAYAsB,IAAAA,KAAK;AACN,GAdQ,EAcN,CAACN,MAAD,CAdM,CAAT;AAgBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEA,MAAhB;AAAwB,MAAA,cAAc,EAAEE;AAAxC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,CAACR,QAAD,gBACC,QAAC,SAAD;AAAW,QAAA,WAAW,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA,cADD,gBAEC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAcD,CAnDD;;GAAMF,G;;KAAAA,G;AAqDN,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport albums from './albums.json';\nimport './App.css';\nimport SongCard from './components/molecules/SongCard';\nimport LoginForm from './components/organisms/LoginForm';\nimport NavBar from './components/organisms/NavBar';\n\nconst sleep = (milliseconds) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState('');\n\n  const onChangeSearch = (e) => setSearch(e.target.value);\n\n  useEffect(() => {\n    const fetch = async () => {\n      if (loggedIn) {\n        setLoading(true);\n        //simulando una carga\n        await sleep(2000)\n        setSongs(albums);\n        setLoading(false);\n      }\n    }\n    fetch();\n  }, [loggedIn]);\n\n  useEffect(() => {\n    const fetch = async () => {\n      if (loggedIn && search !== '') {\n        setLoading(true);\n        //simulando una carga\n        await sleep(2000)\n        setSongs(albums.filter(song => song.title.toLowerCase().includes(search)))\n        setLoading(false);\n      } else {\n        setSongs(albums)\n      }\n    }\n\n    fetch();\n  }, [search])\n\n  return (\n    <>\n      <NavBar search={search} onChangeSearch={onChangeSearch} />\n      <div className=\"App\">\n        <h1 className=\"display-5 mb-5\">Welcome to Spotify</h1>\n        {!loggedIn ? (\n          <LoginForm setLoggedIn={setLoggedIn} />) : (\n          <div className=\"container\">\n            <SongCard />\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}